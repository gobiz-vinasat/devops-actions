name: React CI
on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      repository:
        required: true
        type: string
      branch:
        required: true
        type: string
      node-container:
        required: false
        type: string
        default: node:14-alpine
    secrets:
      gar-json-key:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    container: ${{ inputs.node-container }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}
      - name: Build application
        env:
          REACT_APP_VERSION: ${{ github.run_id }}
        run: |
          unset CI
          npm ci
          npm run build
          tar -czf /tmp/app.tar --exclude=node_modules .
      - name: Archive application artifact
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: /tmp/app.tar
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download application artifact
        uses: actions/download-artifact@v2
        with:
          name: app
      - name: Extract application artifact
        run: tar -xzf app.tar && rm app.tar
      - name: Make image tags
        id: make-tags
        run: |
          if [ ${{ startsWith(inputs.branch, 'v') }} == true ]
          then
            tag=`echo "${{ inputs.branch }}" | sed "s/^v/""/"`
            echo "::set-output name=tags::${{ inputs.repository }}:$tag,${{ inputs.repository }}:latest"
          else
            echo "::set-output name=tags::${{ inputs.repository }}:dev-${{ inputs.branch }}"
          fi
      - name: Login to GAR
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}
          username: _json_key
          password: ${{ secrets.gar-json-key }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.make-tags.outputs.tags }}
